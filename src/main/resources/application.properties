spring.application.name=screenmatch
#Aqui se ve como ejemplo el usar variables de entorno del sistema (segun el curso alura)(como medida temporal)

#Si es posible usar .env seria mejor, como encontre aqui:
#https://stackoverflow.com/questions/71450194/how-do-i-add-environment-variables-in-intellij-spring-boot-project
#SI SE USA .env, ES MUY INPORTANTE AGREGAR A .gitignore

### Stablish connection to Postgres Database ###
#Aqui se mostrara como esta configurado, y como se deberia configurar en caso de usar vairables de entorno del sistema, pero no en .env:
spring.datasource.url=jdbc:postgresql://localhost:5432/alura_series
spring.datasource.username=postgres
spring.datasource.password=password

#variables de entorno:
#spring.datasource.url=jdbc:postgresql://${DB_HOST}/${DB_NAME}
#spring.datasource.username=${DB_USER}
#spring.datasource.password=${DB_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver
hibernate.dialect=org.hibernate.dialect.HSQLDialect

#Actualiza la base de datos automaticamente:
spring.jpa.hibernate.ddl-auto=update

#Ver todas las operaciones realizadas a la base de datos:
spring.jpa.show-sql=true
spring.jpa.format-sql=true

### Stablish connection to Frontend ###
#Change default port for the web server (in case is in use):
#server.port=8081
